name: Build and Deploy to EKS

on:
  push:
    branches: ["main"]

env:
  AWS_REGION: us-west-2
  AWS_ACCOUNT_ID: "321858344734"
  ECR_REPOSITORY: "devops-ai-app"
  EKS_CLUSTER_NAME: "main-cluster"
  K8S_NAMESPACE: "devops-ai"
  IMAGE_TAG: "latest"

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push image
        run: |
          REPO="${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}"
          docker build -t "$REPO:${{ env.IMAGE_TAG }}" .
          docker push "$REPO:${{ env.IMAGE_TAG }}"

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name "${{ env.EKS_CLUSTER_NAME }}" --region "${{ env.AWS_REGION }}"

      - name: Apply manifests
        run: |
          kubectl apply -f kubernetes/
          kubectl rollout status deploy/ai-app -n "${{ env.K8S_NAMESPACE }}" --timeout=180s
          kubectl get svc ai-app-svc -n "${{ env.K8S_NAMESPACE }}"
